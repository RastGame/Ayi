import { User } from '../models/User.js';
import { Profile } from '../models/Profile.js';
import { Dialog } from '../models/Dialog.js';
import { Mute } from '../models/Mute.js';
import { REST } from '@yurbajs/rest';


export default {
  name: 'message',
  handler: async (client, message) => {
    try {
      if (!message.Author?.ID) return;
      
      // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –º—É—Ç

      
      console.log(JSON.stringify(message, null, 2))

      // –ª–æ–≥—ñ–∫–∞ –Ω–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ –±–∞–∑—É —è–∫—â–æ –Ω–µ–º–∞—î (Profiles)
      let profile = await Profile.findById(message.Author.ID);
      if (!profile) {
        await Profile.create(message.Author.ID);
      }

      if (message.Dialog.Type === 'group') {
        // –ª–æ–≥—ñ–∫–∞ –Ω–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ –±–∞–∑—É —è–∫—â–æ –Ω–µ–º–∞—î (Users)
                // –ª–æ–≥—ñ–∫–∞ –Ω–∞ –¥–æ–¥–≤–∞–Ω–Ω—è –¥—ñ–∞–ª–æ–≥—É –≤ –±–∞–∑—É (Dialogs)
        let dialog = await Dialog.findById(message.Dialog.ID);
        if (!dialog) {
          dialog = await Dialog.create(message.Dialog.ID);
        }

        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –º—É—Ç —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ –º–æ–¥–µ—Ä–∞—Ü—ñ—è —É–≤—ñ–º–∫–Ω–µ–Ω–∞
        if (dialog.moderation) {
          const mute = await Mute.findActive(message.Dialog.ID, message.Author.ID);
          if (mute) {
            if (!dialog.token) {
              // –ü–æ–≤—ñ–¥–æ–º–∏—Ç–∏ –≤–ª–∞—Å–Ω–∏–∫–∞ –ø—Ä–æ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ—Å—Ç—å –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ —Ç–æ–∫–µ–Ω
              if (message.Dialog.Owner?.ID) {
                // –¢—É—Ç –º–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ –ª–æ–≥—ñ–∫—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤–ª–∞—Å–Ω–∏–∫–∞
              }
              return message.reply('üîá –¢–∏ –≤ –º—É—Ç—ñ');
            }
            
            // –í–∏–¥–∞–ª–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —á–µ—Ä–µ–∑ API
            try {
              const api = new REST(dialog.token);
              console.log(api)
              const result = await api.dialogs.deleteMessage(message.ID);
              console.log('Result: ', result);
            } catch (error) {
              console.error('Moderation error:', error);
            }
            return;
          }
        }
        let user = await User.findByDialogAndUser(message.Dialog.ID, message.Author.ID);
        if (!user) {
          await User.create(message.Dialog.ID, message.Author.ID);
        }

        // –ª–æ–≥—ñ–∫–∞ –Ω–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É xp (Users)
        const groupXP = Math.floor(Math.random() * 15) + 10; // 10-25 XP
        if (dialog.levels) await User.addXP(message.Dialog.ID, message.Author.ID, groupXP);
      }

      if (message.Dialog.Type != 'channel') {
        // –ª–æ–≥—ñ–∫–∞ –Ω–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É xp (Profiles) - –º–µ–Ω—à–µ –Ω—ñ–∂ –≤ –≥—Ä—É–ø–∞—Ö
        const profileXP = Math.floor(Math.random() * 5) + 1; // 1-5 XP
        await Profile.addXP(message.Author.ID, profileXP);
      }
      
    } catch (error) {
      console.error('Error in message handler:', error);
    }
  }
};
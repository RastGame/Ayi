import { withCooldown, adminOnly } from '../utils/decorators.js';
import { User } from '../models/User.js';
import { getDB } from '../database.js';

export function registerDatabaseCommands(client) {
  client.registerCommand('profile', {}, withCooldown(async function profile(message) {
    try {
      const user = await User.findById(message.Author.ID);
      if (!user) {
        message.reply('‚ùå –ü—Ä–æ—Ñ—ñ–ª—å –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ /register');
        return;
      }
      message.reply(`üë§ –ü—Ä–æ—Ñ—ñ–ª—å @${message.Author.Link}\nüìÖ –ó–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ: ${new Date(user.createdAt).toLocaleDateString()}\nüí¨ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å: ${user.messageCount || 0}`);
    } catch (error) {
      console.error('Profile error:', error);
      message.reply('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –ø—Ä–æ—Ñ—ñ–ª—é');
    }
  }));

  client.registerCommand('register', {}, withCooldown(async function register(message) {
    try {
      const existing = await User.findById(message.Author.ID);
      if (existing) {
        message.reply('‚úÖ –í–∏ –≤–∂–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω—ñ!');
        return;
      }
      
      await User.create({
        _id: message.Author.ID,
        name: message.Author.Name,
        surname: message.Author.Surname,
        link: message.Author.Link,
        createdAt: new Date(),
        messageCount: 1
      });
      
      message.reply('üéâ –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–∞!');
    } catch (error) {
      console.error('Register error:', error);
      message.reply('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó');
    }
  }));

  client.registerCommand('stats', {}, adminOnly(async function stats(message) {
    try {
      const db = getDB();
      const totalUsers = await db.collection('users').countDocuments();
      const totalMessages = await db.collection('users').aggregate([
        { $group: { _id: null, total: { $sum: '$messageCount' } } }
      ]).toArray();
      
      message.reply(`üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞:\nüë• –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤: ${totalUsers}\nüí¨ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å: ${totalMessages[0]?.total || 0}`);
    } catch (error) {
      console.error('Stats error:', error);
      message.reply('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏');
    }
  }));
}
import { Welcomer } from '../../models/Welcomer.js';
import { replacePlaceholders } from '../../utils/placeholders.js';

export default {
  name: 'welcome',
  args: { text: { type: 'string', rest: true ,required: false} },
  handler: async (client, message, args) => {
    try {
      if (message.Dialog.Type !== 'group') {
        return message.reply('‚ùå –ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç—ñ–ª—å–∫–∏ –≤ –≥—Ä—É–ø–∞—Ö!');
      }

      if (message.Author.ID !== message.Dialog.Owner?.ID && message.Author.ID !== 1111) {
        return message.reply('‚ùå –¢—ñ–ª—å–∫–∏ –≤–ª–∞—Å–Ω–∏–∫ –¥—ñ–∞–ª–æ–≥—É –º–æ–∂–µ –∑–º—ñ–Ω—é–≤–∞—Ç–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è!');
      }

      let welcomer = await Welcomer.findById(message.Dialog.ID);
      if (!welcomer) {
        await Welcomer.create(message.Dialog.ID);
        welcomer = await Welcomer.findById(message.Dialog.ID);
      }

      if (!args.text) {
        const currentText = welcomer.welcome?.text || '–ù–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ';
        return message.reply(`üìù –ü–æ—Ç–æ—á–Ω–∏–π —Ç–µ–∫—Å—Ç –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è:\n${currentText}`);
      }

      await Welcomer.setWelcome(message.Dialog.ID, welcomer.welcome?.enabled || false, args.text);

      const response = replacePlaceholders(args.text, message);
      return message.reply(`‚úÖ –¢–µ–∫—Å—Ç –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è –æ–Ω–æ–≤–ª–µ–Ω–æ! \n ${response}`);
    } catch (error) {
      console.error('Welcome text error:', error);
      message.reply('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ñ —Ç–µ–∫—Å—Ç—É –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è');
    }
  }
};